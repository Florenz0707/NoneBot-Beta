from nonebot.plugin import PluginMetadata
from nonebot.adapters.onebot.v11 import Bot, PrivateMessageEvent, Message, GroupMessageEvent
from nonebot import on_command, get_bot, get_driver, logger
from nonebot.permission import SUPERUSER
from nonebot.params import CommandArg
import time
import asyncio

__plugin_meta__ = PluginMetadata(
    name='send',
    description='通知和反馈基本功能',
    usage='',
)

all_menu = on_command('help', aliases={'menu', 'h'}, priority=5)


@all_menu.handle()
async def _():
    message = """========R-I-F-T========
1> 插件列表:
| Leetcode2: .lc
| 今日人品2: .jrrp
| ZXPIX: .zxpix
| 发病语录: .suki
| STEAM播报: .steam
| EMOJI合并: 😇+🥰
| 发送反馈: .send
| 设置闹钟: .clock
| 化身抽象: .ab
2> 用法帮助:
| .jrrp | .weekjrrp | .monthjrrp | .alljrrp
 => 获取今日|本周|本月|全部的人品值
| .suki [text | @ta]
 => 对着某事或某人发电
| EMOJI合并: 直接如上文使用，仅限emoji
| .send [text]
 => 反馈的信息会直接通过机器人私聊到管理员
| .ab [text]
 => 将文本抽象化（使用emoji代替）
| 其余插件可使用 插件.help 获取帮助
 例如: .lc.help | .lc.menu
    """
    await all_menu.finish(message)


inform = on_command('inform', priority=10, block=True, permission=SUPERUSER)


@inform.handle()
async def notice_receive(bot: Bot, event: PrivateMessageEvent):
    message = event.raw_message.replace('.inform', '', 1).strip().strip('\n')
    group_list = await bot.call_api('get_group_list')
    await inform.send(f'正在传达消息......')
    for item in group_list:
        await bot.call_api('send_group_msg', **{
            'message': message,
            'group_id': item['group_id'],
        })
        await asyncio.sleep(5)
    await inform.finish(f'消息已经传达完毕了哦！')


async def sendtosuperuser(message):
    superusers = get_driver().config.superusers
    bot = get_bot()
    for superuser in superusers:
        await bot.call_api('send_msg', **{
            'message': message,
            'user_id': superuser,
        })
        await asyncio.sleep(3)


send = on_command('send', priority=5, block=True)


@send.handle()
async def send_receive(bot: Bot, event: GroupMessageEvent, args: Message = CommandArg()):
    message = event.raw_message.replace('.send', '', 1).strip().strip('\n')
    name = event.sender.nickname
    group = await bot.call_api('get_group_info', **{
        'group_id': event.group_id,
    })
    group_name = group['group_name']
    timenow = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime())
    sendmsg = f"时间：{timenow}\n来自群聊：{group_name}\n发送者：{name}\n内容：{message}"
    logger.warning(f"SendMSG: {sendmsg}")
    await sendtosuperuser(sendmsg)
    await send.finish(f'已经把意见传达给Master了~！')
